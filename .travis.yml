sudo: required
services: docker
dist: trusty
language: cpp
env:
  global:
  - secure: xN+lGOH8LzepE1OoOrHelDgu1wf7nL/B7nBWhN7EnCB7S7hZJL/AakruHy4lMfQfF4XkrnPWmBlmc4wdLH+o6jPkUISm4nLRSTMnRV2L+Mjyzg3aIEua0xpO6rLUNgsShB8mfkieTJq+kSj3Yp2CM7GEzm+UNNxeJcY0VdUHy9msRRRbXiLViIrfwBEVC9He7xG9NWfqkpsORfoiPmVDm7YzuXALdB8qkX4AWggysz/BCVj0PwBMr754eEpOodQ9GeKDF2Kwy5vPAqK5f7zwshJtF9VevyA1A2M9y8BHJMymz4wGaSxLNMeUU85AmVIvmzX0weG94JQ7mlUVszNpO5CCIyjwCOF+IDUI8HCDJGOY7+gGnv4H2LhDwAXvFLD65FlMntQQe2e4KRTnFxtJvvghjv5FyxJSHwctLsgeDpr2uZDcAhK1yf8TNsqqMiXQj2yGLByJy8j5PjUyd8oN47uZo0T5DDMd5c3ztUppc5+DisIoqmoYQeom3lYbpeudaf492ZDBWEV4rS9COl1h7CnpanMBpXWLFc2zXyfTpRn3GifutiF8M3rSS2KHcPyb9JLePTrC4+itMkwB4SHo1VYk4H2RQAdPMDFHMKCeVs2Z4sF9pGPJR+JzRekaKFLDm73ihsuE0cnx1oPVQMjSWa0e7A1a9W4UQBvp9xR++i4=
  - OMP_NUM_THREADS=3
  - DO_BUILD=yes
  - DO_TEST=yes
matrix:
  include:
  - compiler: gcc49
    env:
    - COMPILER=g++
    - IMG=gcc49
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On -DRAJA_DEPRECATED_TESTS=On"
  - compiler: gcc6
    env:
    - COMPILER=g++
    - IMG=gcc6
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: gcc7
    env:
    - COMPILER=g++
    - IMG=gcc7
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: gcc8
    env:
    - COMPILER=g++
    - IMG=gcc8
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: clang6
    env:
    - COMPILER=clang++
    - IMG=clang6
    - CMAKE_EXTRA_FLAGS="-DCMAKE_CXX_FLAGS=-fmodules -DENABLE_TBB=On"
  - compiler: clang5
    env:
    - COMPILER=clang++
    - IMG=clang5
    - CMAKE_EXTRA_FLAGS="-DCMAKE_CXX_FLAGS=-fmodules -DENABLE_TBB=On"
  - compiler: intel18
    env:
    - COMPILER=/opt/intel/bin/icpc
    - IMG=icc18
    - CMAKE_EXTRA_FLAGS="-DENABLE_TBB=On"
  - compiler: nvcc
    env:
    - COMPILER=g++
    - IMG=nvcc9
    - CMAKE_EXTRA_FLAGS="-DENABLE_CUDA=On -DENABLE_TBB=On"
    - DO_TEST=no
  - compiler: gcc-4.9-debug
    env:
    - COMPILER=g++
    - IMG=gcc49
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_WARNINGS=On -DENABLE_WARNINGS_AS_ERRORS=On -DENABLE_COVERAGE=On -DENABLE_TBB=On"
  - compiler: clang-6-debug
    env:
    - COMPILER=clang++
    - IMG=clang6
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_TBB=On -DCMAKE_CXX_FLAGS=-fsanitize=address"
    - ASAN_OPTIONS=detect_leaks=0
    - "LSAN_OPTIONS=verbosity=1:log_threads=1"
  - compiler: nvcc-debug
    env:
    - COMPILER=g++
    - IMG=nvcc9
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_CUDA=On -DENABLE_WARNINGS=On -DENABLE_WARNINGS_AS_ERRORS=On -DENABLE_TBB=On"
    - DO_TEST=no

before_install: # don't try to build and run intel when it's impossible
- |
  if [[ "x$encrypted_cd1f6303bca7_key" != "x" ]] ; then
    openssl aes-256-cbc -K $encrypted_cd1f6303bca7_key -iv $encrypted_cd1f6303bca7_iv -in ${TRAVIS_BUILD_DIR}/travis-data/intel2016.lic.enc -out ${TRAVIS_BUILD_DIR}/travis-data/intel2016.lic -d
  else
    if [[ $COMPILER == *"icpc"* ]] ; then
      export DO_TEST=no DO_BUILD=no
    fi
  fi
- export LSAN_OPTIONS
- export ASAN_OPTIONS

script:
- docker run --rm --user='root' -v ${TRAVIS_BUILD_DIR}:/home/raja rajaorg/compiler:$IMG chown -R raja /home/raja
- docker run --rm -v ${TRAVIS_BUILD_DIR}/travis-data:/opt/intel/licenses -v ${TRAVIS_BUILD_DIR}:/home/raja -e ASAN_OPTIONS -e LSAN_OPTIONS -e COMPILER -e DO_BUILD -e DO_TEST -e CMAKE_EXTRA_FLAGS rajaorg/compiler:$IMG ./scripts/travis_build_and_test.sh

after_success:
- if [[ "${CMAKE_EXTRA_FLAGS}" == *"ENABLE_COVERAGE"* ]] ; then bash <(curl -s https://codecov.io/bash) -a "-f" >& /dev/null; fi
