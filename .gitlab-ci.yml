############################################################################
# Copyright (c) 2016-2020, Lawrence Livermore National Security, LLC
# and RAJA project contributors. See the RAJA/COPYRIGHT file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
############################################################################

###############################################################################
# General GitLab pipelines configurations for supercomputers and Linux clusters
# at Lawrence Livermore National Laboratory (LLNL).
#
# This entire pipeline is LLNL-specific
# #############################################################################

# We define the following GitLab pipeline variables:
#
# GIT_SUBMODULE_STRATEGY:
# Tells Gitlab to recursively update the submodules when cloning umpire
#
# RAJA_ALLOC_NAME:
# On LLNL's quartz, this pipeline creates only one allocation shared among jobs
# in order to save time and resources. This allocation has to be uniquely named
# so that we are sure to retrieve it.
#
# BUILD_ROOT:
# The path to the shared resources between all jobs. The BUILD_ROOT is unique to
# the pipeline, preventing any form of concurrency with other pipelines. This
# also means that the BUILD_ROOT directory will never be cleaned.
# TODO: add a clean-up mechanism

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  RAJA_ALLOC_NAME: raja_ci_$CI_COMMIT_SHORT_SHA
  BUILD_ROOT: ${CI_BUILDS_DIR}/umpire/${CI_COMMIT_REF_SLUG}_${CI_PIPELINE_ID}

before_script:
  - date

after_script:
  - date

# There are no tests for now.
stages:
  - start
  - q_allocate_resources
  - q_build
  - q_release_resources
  - l_build
  - b_build

# The start job is actually a dumb one, which serves as a reference to start
# q_allocate_resources, l_build_and_test and b_build_and_test simultaneously.
# TODO: GitLab 12.8 will allow for empty "needs" to trigger the job asap,
# this start job will no be necessary anymore.
# Note: "GIT_STRATEGY: none" tells GitLab not to clone umpire for this job.
start:
  variables:
    GIT_STRATEGY: none
  stage: start
  tags:
    - shell
  script:
    - echo "Creating a reference job for dag execution (needs keyword)"

# This is the rules that drives the activation of "advanced" jobs. All advanced
# jobs will share this through a template mechanism.
.advanced_pipeline:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop" || $RAJA_ALL_TARGETS == "ON"' #run only if ...

# These are also templates (.name) that define project specific build commands.
# If an allocation exist with the name defined in this pipeline, the job will
# use it (slurm specific).
.build_toss_3_x86_64_ib_script:
  script:
    - echo ${RAJA_ALLOC_NAME}
    - export JOBID=$(squeue -h --name=${RAJA_ALLOC_NAME} --format=%A)
    - echo ${JOBID}
    - srun $( [[ -n "${JOBID}" ]] && echo "--jobid=${JOBID}" ) -t 10 -N 1 -n 1 -c 4 scripts/gitlab/build_and_test.sh

# Lassen and Butte use a different job scheduler (spectrum lsf) that does not
# allow pre-allocation the same way slurm does.
.build_blueos_3_ppc64le_ib_script:
  script:
    - lalloc 1 scripts/gitlab/build_and_test.sh

.build_blueos_3_ppc64le_ib_p9_script:
  extends: .build_blueos_3_ppc64le_ib_script


# This is where jobs are included.
include:
  - local: .gitlab/ci/build_quartz.yml
  - local: .gitlab/ci/build_butte.yml
  - local: .gitlab/ci/build_lassen.yml

