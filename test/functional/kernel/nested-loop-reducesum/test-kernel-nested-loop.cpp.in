//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
// Copyright (c) 2016-23, Lawrence Livermore National Security, LLC
// and RAJA project contributors. See the RAJA/LICENSE file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

#include "RAJA_test-base.hpp"
#include "RAJA_test-camp.hpp"

#include "RAJA_test-forall-data.hpp"
#include "RAJA_test-kernel-nested-loop-types.hpp"

#include "RAJA_test-reducepol.hpp"

#include "test-kernel@RESOURCE@nested-loop-@NESTED_LOOP_TYPE@.hpp"

using SequentialKernelNestedLoopExecPols = camp::list<

    // Depth 1 ReduceSum Exec Pols
    NestedLoopData<DEPTH_1_REDUCESUM, RAJA::seq_exec, RAJA::seq_reduce, RAJA::seq_exec >,

    // Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::seq_exec,  RAJA::seq_exec, RAJA::seq_exec >

  >;

#if defined(RAJA_ENABLE_OPENMP)

using OpenMPKernelNestedLoopExecPols = camp::list<

    // Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::omp_parallel_for_exec, RAJA::seq_exec, RAJA::seq_exec >,
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::seq_exec, RAJA::omp_parallel_for_exec, RAJA::simd_exec >
  >;

#endif  // RAJA_ENABLE_OPENMP


#if defined(RAJA_ENABLE_TARGET_OPENMP)

using OpenMPTargetKernelNestedLoopExecPols = camp::list<

    // Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::seq_exec,  RAJA::omp_target_parallel_for_exec<16>, RAJA::seq_exec >
  >;

#endif  // RAJA_ENABLE_TARGET_OPENMP


#if defined(RAJA_ENABLE_TBB)

using TBBKernelNestedLoopExecPols = camp::list<

    // Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::seq_exec,  RAJA::tbb_for_exec, RAJA::tbb_for_exec >,
    NestedLoopData<DEPTH_3_REDUCESUM, RAJA::tbb_for_exec, RAJA::tbb_for_exec, RAJA::tbb_for_exec >
  >;

#endif  // RAJA_ENABLE_TBB

#if defined(RAJA_ENABLE_CUDA)
using CudaKernelNestedLoopExecPols = camp::list<

    // Device Depth 1 ReduceSum Exec Pols
    NestedLoopData<DEVICE_DEPTH_1_REDUCESUM, RAJA::cuda_thread_x_loop, RAJA::cuda_block_reduce >,

    // Device Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM, RAJA::cuda_block_x_loop, RAJA::cuda_thread_y_loop, RAJA::cuda_thread_z_loop >,
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM_SEQ_OUTER, RAJA::seq_exec, RAJA::cuda_block_x_loop, RAJA::cuda_thread_y_loop >,
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM_SEQ_INNER, RAJA::cuda_block_x_loop, RAJA::cuda_thread_x_loop, RAJA::seq_exec >
  >;

#endif  // RAJA_ENABLE_CUDA

#if defined(RAJA_ENABLE_HIP)
  
using HipKernelNestedLoopExecPols = camp::list<

    // Device Depth 1 ReduceSum Exec Pols
    NestedLoopData<DEVICE_DEPTH_1_REDUCESUM, RAJA::hip_thread_x_loop, RAJA::hip_block_reduce >,

    // Device Depth 3 ReduceSum Exec Pols
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM, RAJA::hip_block_x_loop, RAJA::hip_thread_y_loop, RAJA::hip_thread_z_loop >,
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM_SEQ_OUTER, RAJA::seq_exec, RAJA::hip_block_x_loop, RAJA::hip_thread_y_loop >,
    NestedLoopData<DEVICE_DEPTH_3_REDUCESUM_SEQ_INNER, RAJA::hip_block_x_loop, RAJA::hip_thread_x_loop, RAJA::seq_exec >
  >;

#endif  // RAJA_ENABLE_HIP

//
// Build out list of supported Nested Loop data for tests' suported types.
//
using @NESTED_LOOP_TYPE@KernelNestedLoopExecPols = 
  KernelExecListBuilder<
    @NESTED_LOOP_TYPE@SupportedLoopTypeList,
    @NESTED_LOOP_BACKEND@KernelNestedLoopExecPols
  >::type;

//
// Cartesian product of types used in parameterized tests.
//
using @NESTED_LOOP_BACKEND@KernelNestedLoopTypes =
  Test< camp::cartesian_product<@NESTED_LOOP_BACKEND@ResourceList,
                                @NESTED_LOOP_BACKEND@ReducePols,
                                @NESTED_LOOP_TYPE@KernelNestedLoopExecPols>>::Types;

//
// Instantiate parameterized test.
//
INSTANTIATE_TYPED_TEST_SUITE_P(@NESTED_LOOP_BACKEND@,
                               KernelNestedLoop@NESTED_LOOP_TYPE@Test,
                               @NESTED_LOOP_BACKEND@KernelNestedLoopTypes);
